- type: custom:button-card
  entity: null
  name: Bedroom
  icon: mdi:bed
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-desktop/bedroom
  hold_action:
    action: navigate
    navigation_path: "#pop-up-bedrooms" # For use with BUBBLE CARD pop-up
  show_icon: true
  show_state: false
  show_name: true
  state:
    - operator: template
      value: |
        [[[
          var showerstate = states['input_boolean.master_bath_shower'].state
          if  (showerstate == "on")
            return "true"; 
        ]]]
      color: cyan
      icon: mdi:shower-head
      color_type: card
      styles:
        card:
          - animation: mymovecyan 4s infinite
          - box-shadow: 0 0 4px cyan
    - operator: template
      value: |
        [[[
          var tvstate = states['media_player.bedroom_chromecast_tv'].state
          if  (tvstate != "off" )
            return "true"; 
        ]]]
      color: green
      icon: mdi:television-play
      color_type: card
      styles:
        card:
          - animation: mymovegreen 4s infinite
          - box-shadow: 0 0 4px green
    - operator: template
      value: |
        [[[
          var tvstate = states['remote.bedroom_chromecast_tv_remote'].state
          var tvstatemedia = states['media_player.bedroom_chromecast_tv'].state
          if  (tvstate == "on" && (tvstatemedia != "off"))
            return "true"; 
        ]]]
      color: green
      icon: mdi:television
      color_type: card
      styles:
        card:
          - animation: mymovegreen 4s infinite
          - box-shadow: 0 0 4px green
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  extra_styles: |
    @keyframes mymovegreen {
      50% {box-shadow: 0 0 15px green;}
    }
  grid_options:
    columns: 4
    rows: null
- type: custom:button-card
  entity: null
  name: Office
  icon: mdi:desk
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /dashboard-office/0
  hold_action:
    action: call-service
    service: script.shutdown_office
    target: {}
    confirmation:
      text: Put Room to Sleep?
  show_icon: true
  show_state: false
  show_name: true
  state:
    - operator: template
      value: |
        [[[
          var pcstate = states['sensor.hass_desktop_sessionstate'].state
          if  (pcstate != "unavailable")
            return "true"; 
        ]]]
      color: green
      icon: mdi:desktop-tower-monitor
      color_type: card
      styles:
        card:
          - animation: mymovegreen 4s infinite
          - box-shadow: 0 0 4px green
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  extra_styles: |
    @keyframes mymovegreen {
      50% {box-shadow: 0 0 15px green;}
    }
  grid_options:
    columns: 4
- type: custom:button-card
  entity: select.harmony_hub_activities
  name: Livingroom
  icon: mdi:sofa
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-desktop/living-room
  hold_action:
    action: call-service
    service: scene.turn_on
    target:
      entity_id: scene.livingroom_turn_off
    confirmation:
      text: Put Room to Sleep?
  show_icon: true
  show_state: false
  show_name: true
  state:
    - operator: template
      value: |
        [[[
          var tvChromecast = states['media_player.living_room_chromecasttv'].state
          if  (tvChromecast == "playing")
            return "true"; 
        ]]]
      color: green
      icon: mdi:television-play
      color_type: card
      styles:
        card:
          - animation: mymovegreen 4s infinite
          - box-shadow: 0 0 4px green;
    - operator: template
      value: |
        [[[
          var tvChromecast = states['media_player.living_room_chromecasttv'].state
          if  (tvChromecast == "paused")
            return "true"; 
        ]]]
      icon: mdi:television-pause
      color_type: card
      styles:
        card:
          - animation: mymovegreen 4s infinite
    - operator: template
      value: |
        [[[
          var harmony = states['select.s_harmony_hub_activities']
          if  (harmony == "Livingroom TV")
            return "true"; 
        ]]]
      color: green
      icon: mdi:television-ambient-light
      color_type: card
      styles:
        card:
          - animation: mymovegreen 4s infinite
          - box-shadow: 0 0 4px green;
    - operator: template
      value: |
        [[[
          var harmony = states['select.s_harmony_hub_activities']
          if  (harmony == "Projector ")
            return "true"; 
        ]]]
      color: green
      icon: mdi:projector
      color_type: card
      styles:
        card:
          - animation: mymovegreen 4s infinite
          - box-shadow: 0 0 4px green;
  extra_styles: |
    @keyframes mymovegreen {
      50% {box-shadow: 0 0 15px green;}
    }
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: Backyard
  icon: mdi:sprout-outline
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/backyard
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  state:
    - operator: template
      value: |
        [[[
          if ((states['light.side_yard_lightswitch'].state == 'on') 
              ||
              (states['switch.backyard_string_lights'].state == 'on') 
              ||
              (states['switch.backyard_patio_light_switch'].state == 'on') 
              ||
              (states['light.backyard_ceiling_fan_light'].state == 'on') 
              ||
              (states['fan.backyard_ceiling_fan'].state == 'on') 
          )
            return "true"; 
        ]]]
      color: yellow
      icon: mdi:sprout-outline
      color_type: card
      styles:
        card:
          - animation: lights 6s infinite
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  extra_styles: |
    @keyframes dryer {
      60% {box-shadow: 0 0 15px orange;}
      }
    @keyframes lights {
      50% {box-shadow: 0 0 15px yellow;}
      }
    @keyframes washeranddryer {
      60% {box-shadow: 0 0 15px magenta;}
      }
  grid_options:
    columns: 4
- type: custom:button-card
  entity: cover.garage_door
  name: Garage/Travel
  show_icon: true
  show_state: false
  show_name: true
  aspect_ratio: 1.49/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/garage
  hold_action:
    action: toggle
    confirmation:
      text: Open/Close Garage Door?
  state:
    - operator: template
      value: |
        [[[
          const COMMENT = "This section for Demo use only (Use for garage paritally open/opening)";
          const regex = /garageopen(\d+)/; 
          const entityState = states['input_text.dashboard_demo'].state; // Retrieve the state of the entity
          const match = entityState.match(regex); // Match regex on the entity state
          
          if  ((states['input_text.dashboard_demo'].state.indexOf("garageopen")!= "-1")
          &&
              ( match !== null)
          )  return "true"; 
        ]]]
      name: |
        [[[ 
          const regex = /garageopen(\d+)/; 
          const entityState = states['input_text.dashboard_demo'].state; // Retrieve the state of the entity
          const match = entityState.match(regex); // Match regex on the entity state
          return match ? `Open ${match[1]}%` : "Garage number not found";
        ]]]
      color: yellow
      icon: mdi:garage-alert-variant
      styles:
        card:
          - animation: mymove 2s infinite
    - operator: template
      value: |
        [[[
          const COMMENT = "This section for Demo use only (Use for garage FULLY OPEN)";
          if  ((states['input_text.dashboard_demo'].state.indexOf("garageopen")!= "-1")
          )  return "true"; 
        ]]]
      name: |
        [[[ 
          return "Open 100%";
        ]]]
      color: yellow
      icon: mdi:garage-open-variant
      styles:
        card:
          - animation: mymove 2s infinite
    - operator: template
      value: |
        [[[
          if (( states['cover.garage_door'].attributes.current_position <= 15 ) 
          &
          ( states['cover.garage_door'].attributes.current_position > 0 ) 
          )  return "true"; 
        ]]]
      color: yellow
      name: >
        [[[ return "Open "
        +states['cover.garage_door'].attributes.current_position + "%"  ]]]
      icon: mdi:garage-open-variant
    - value: closed
      color: rgb(68 115 157)
      icon: mdi:garage-variant
      color_type: card
    - value: open
      color: red
      icon: mdi:garage-open-variant
      name: >
        [[[ return "Open "
        +states['cover.garage_door'].attributes.current_position + "%"  ]]]
    - value: opening
      color: yellow
      icon: mdi:garage-alert-variant
      styles:
        card:
          - animation: mymove 2s infinite
    - value: closing
      color: yellow
      icon: mdi:garage-alert-variant
      color_type: card
      styles:
        card:
          - animation: mymove 2s infinite
    - value: unavailable
      color: grey
      icon: mdi:garage-alert-variant
      color_type: card
  extra_styles: |
    @keyframes mymove {
      50% {box-shadow: 0 0 60px red;}
      }
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: Security
  icon: mdi:video
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/security
  hold_action:
    action: navigate
    navigation_path: /ccab4aaf_frigate-proxy/ingress
  double_tap_action:
    action: navigate
    navigation_path: /ccab4aaf_frigate-proxy/ingress
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: All Lights
  icon: mdi:lightbulb-group
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/lights
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  grid_options:
    columns: 4
- type: custom:button-card
  name: Curtain/Blinds
  icon: mdi:blinds
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/windows
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  grid_options:
    columns: 4
- type: custom:button-card
  entity: climate.thermostat
  icon: mdi:weather-partly-rainy
  color: rgb(68 115 157)
  name: |
    [[[
        var temp = states['climate.thermostat'].attributes.temperature;
        var ambient = states['sensor.living_room_temp_humidity_temperature'].state;
        var state = states['climate.thermostat'].attributes.hvac_action;
        var HVACMode = states['climate.thermostat'].state;
        var stateColor = "grey"
        if (HVACMode == 'heat') {
          var tempColor = "#FF8100"
          if (state != 'idle') 
            stateColor = "#FF8100"
        }
        if (HVACMode == 'cool') {
          var tempColor = "cyan"
          if (state != 'idle') 
            stateColor = "cyan"
        }
        
        if (HVACMode != "off")
          return `<span style="color: ${stateColor};">${state}</span> (<span style="color: ${tempColor};">${temp}℉</span>)`
        return "Weather/AQI";
    ]]]
  label: |
    [[[

        var temp = states['climate.thermostat'].attributes.current_temperature;
        var ambient = states['sensor.living_room_temp_humidity_temperature'].state;
        if (states['climate.thermostat'].state != "off")
          return "Current: " + ambient + "℉";
        return ambient + "℉";
    ]]]
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-desktop/weather-stats
  hold_action:
    action: fire-dom-event
    browser_mod:
      service: browser_mod.popup
      data:
        title: Weather
        content:
          type: vertical-stack
          cards:
            - type: horizontal-stack
              cards:
                - type: thermostat
                  entity: climate.thermostat
                  features:
                    - style: icons
                      type: climate-hvac-modes
                  show_current_as_primary: false
                  name: House Thermostat
                - type: thermostat
                  entity: climate.master_bedroom_ac
                  features:
                    - style: icons
                      type: climate-hvac-modes
              show_current_as_primary: false
              name: Master Portable AC
            - type: weather-forecast
              entity: weather.home
              forecast_type: daily
            - type: weather-forecast
              entity: weather.home
              forecast_type: hourly
              show_current: false
            - type: glance
              entities:
                - entity: sun.sun
                - entity: sensor.sun_next_dawn
                - entity: sensor.sun_next_dusk
  show_icon: true
  show_state: false
  show_name: true
  show_label: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
    name:
      - text-transform: capitalize
  state:
    - value: unavailable
      color: grey
      icon: mdi:weather-partly-rainy
      color_type: card
    - value: cool
      color: cyan
      icon: mdi:weather-partly-rainy
      color_type: card
    - value: heat
      color: "#FF8100"
      icon: mdi:weather-partly-rainy
      color_type: card
    - operator: template
      value: |
        [[[
          var temp = states['climate.master_bedroom_ac'].state;
          if ((temp == 'cool'))
            return true
        ]]]
      color: cyan
      label: |
        [[[
            var temp = states['climate.master_bedroom_ac'].attributes.temperature;
            var ambient = states['sensor.living_room_temp_humidity_temperature'].state;
            return "Mastr: " + temp + "F";
        ]]]
      icon: mdi:weather-windy
      color_type: card
    - operator: template
      value: |
        [[[
          var temp = states['climate.master_bedroom_ac'].state;
          if ((temp == 'fan-only'))
            return true
        ]]]
      color: white
      label: |
        [[[
            var temp = states['climate.master_bedroom_ac'].attributes.temperature;
            var ambient = states['sensor.living_room_temp_humidity_temperature'].state;
            return "Mastr: " + temp + "F";
        ]]]
      icon: mdi:weather-windy
      color_type: card
    - operator: template
      value: |
        [[[
          var temp = states['climate.master_bedroom_ac'].state;
          if ((temp == 'heat') 
          || (temp == 'dry'))
            return true
        ]]]
      color: orange
      label: |
        [[[
            var temp = states['climate.master_bedroom_ac'].attributes.temperature;
            var ambient = states['sensor.living_room_temp_humidity_temperature'].state;
            return "Mastr: " + temp + "F";
        ]]]
      icon: mdi:weather-windy
      color_type: card
  grid_options:
    columns: 4
- type: custom:button-card
  entity: sensor.front_1_station_status
  name: Water
  icon: mdi:pipe-valve
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/sprinkler
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  state:
    - operator: template
      value: |
        [[[
          const COMMENT = "This section for Demo use only (For when printer is in progress/starting)";
          const regex = /sprinklers(\S+)/; 
          const regex2 = /housewater(\S+)/; 
          const entityState = states['input_text.dashboard_demo'].state; // Retrieve the state of the entity
          const match = entityState.match(regex); // Match regex on the entity state
          
          if  ((states['input_text.dashboard_demo'].state.indexOf("sprinklers")!= "-1")
              || 
              (states['input_text.dashboard_demo'].state.indexOf("housewater")!= "-1")  
          )  return "true"; 
        ]]]
      name: |
        [[[ 
          const regex = /sprinklers(\S+)/; 
          const regex2 = /housewater(\S+)/; 
          const entityState = states['input_text.dashboard_demo'].state; // Retrieve the state of the entity
          const match = entityState.match(regex); // Match regex on the entity state
          const match2 = entityState.match(regex2); // Match regex on the entity state

          if ( match !== null)
            return `${match[1]}`+ "GPM";
          else if ( match2 !== null)
            return `${match2[1]}`+ "GPM";
        ]]]
      icon: |
        [[[ 
          const regex = /sprinklers(\S+)/; 
          const regex2 = /housewater(\S+)/; 
          const entityState = states['input_text.dashboard_demo'].state; // Retrieve the state of the entity
          const match = entityState.match(regex); // Match regex on the entity state
          const match2 = entityState.match(regex2); // Match regex on the entity state
          
          if ( match !== null)
            return "mdi:sprinkler-variant";
          else if ( match2 !== null)
            return "mdi:pipe-valve";
        ]]]
      color_type: card
      color: cyan
      styles:
        card:
          - animation: mymove 2s infinite
    - operator: template
      value: |
        [[[
          if ( (states['sensor.front_1_station_status'].state ==
          'unavailable') && 
          (states['sensor.front_2_station_status'].state ==
          'unavailable') && 
          (states['sensor.back_gate_station_status'].state ==
          'unavailable') && 
          (states['sensor.back_patio_station_status'].state ==
          'unavailable') && 
          (states['sensor.back_side_station_status'].state ==
          'unavailable') )
            return "true"; 
          
        ]]]
      color: "#494949"
      icon: mdi:sprinkler-variant
      color_type: card
    - operator: template
      value: |
        [[[
          if ( !(states['sensor.front_1_station_status'].state ==
          'idle') || 
          !(states['sensor.front_2_station_status'].state ==
          'idle') || 
          !(states['sensor.back_gate_station_status'].state ==
          'idle') || 
          !(states['sensor.back_patio_station_status'].state ==
          'idle') || 
          !(states['sensor.back_side_station_status'].state ==
          'idle') )
            return "true"; 
          
        ]]]
      color: green
      icon: mdi:sprinkler-variant
      color_type: card
      styles:
        card:
          - animation: mymove 2s infinite
    - operator: template
      value: |
        [[[
          if (states['sensor.flume_water_meter_current'].state > 0) return "true"; 
        ]]]
      color: cyan
      name: >
        [[[ 

        var flowRate = states['sensor.flume_water_meter_current'].state

        var flow =
        helpers.localize(states['sensor.flume_water_meter_current'],
        undefined, 5, undefined, 'GPM')

        return flow


        ]]]
      icon: mdi:pipe-valve
      color_type: card
      styles:
        card:
          - animation: mymove 2s infinite
  extra_styles: |
    @keyframes mymove {
      60% {box-shadow: 0 0 15px green;}
      }
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: Batteries
  icon: mdi:battery-80
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/batteries
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: Automations
  icon: mdi:robot
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/automations
  hold_action:
    action: assist
    start_listening: true
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: Servers
  icon: mdi:server
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-desktop/servers
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  grid_options:
    columns: 4
- type: custom:button-card
  entity: vacuum.sharky
  name: Sharkie
  icon: mdi:robot-vacuum
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/vacuum
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  state:
    - value: paused
      color: orange
      icon: mdi:robot-vacuum
      color_type: icon
      styles:
        card:
          - opacity: 40%
    - value: cleaning
      color: green
      icon: mdi:robot-vacuum
      color_type: icon
      styles:
        icon:
          - animation: cleaning 5s linear infinite;
    - value: returning
      color: yellow
      icon: mdi:robot-vacuum
      color_type: icon
      styles:
        icon:
          - animation: returning 5s linear infinite;
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  extra_styles: |


    @keyframes cleaning {
      0% {
        transform: rotate(0) translate(0);
      }
      5% {
        transform: rotate(0) translate(0, -6px);
      }
      10% {
        transform: rotate(0) translate(0, 5px);
      }
      15% {
        transform: rotate(0) translate(0);
      }
      /* Turn left */
      20% {
        transform: rotate(30deg) translate(0);
      }
      25% {
        transform: rotate(30deg) translate(0, -6px);
      }
      30% {
        transform: rotate(30deg) translate(0, 5px);
      }
      35% {
        transform: rotate(30deg) translate(0);
      }
      40% {
        transform: rotate(0) translate(0);
      }
      /* Turn right */
      45% {
        transform: rotate(-30deg) translate(0);
      }
      50% {
        transform: rotate(-30deg) translate(0, -6px);
      }
      55% {
        transform: rotate(-30deg) translate(0, 5px);
      }
      60% {
        transform: rotate(-30deg) translate(0);
      }
      70% {
        transform: rotate(0deg) translate(0);
      }
      /* Staying still */
      100% {
        transform: rotate(0deg);
      }
    }

    @keyframes returning {
      0% {
        transform: rotate(0);
      }
      25% {
        transform: rotate(10deg);
      }
      50% {
        transform: rotate(0);
      }
      75% {
        transform: rotate(-10deg);
      }
      100% {
        transform: rotate(0);
      }
    }
  grid_options:
    columns: 4
- type: custom:button-card
  entity: sensor.bambu_p1s_printer_nozzle_temperature
  name: 3D Printer
  icon: mdi:printer-3d-nozzle
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-desktop/bambu-p1s
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  state:
    - operator: template
      value: |
        [[[
          const COMMENT = "This section for Demo use only (For when printer is in progress/starting)";
          const regex = /3dprinter(\S+)/; 
          const entityState = states['input_text.dashboard_demo'].state; // Retrieve the state of the entity
          const match = entityState.match(regex); // Match regex on the entity state
          
          if  ((states['input_text.dashboard_demo'].state.indexOf("3dprinter")!= "-1")
              
          )  return "true"; 
        ]]]
      name: |
        [[[ 
          const regex = /3dprinter(\S+)/; 
          const entityState = states['input_text.dashboard_demo'].state; // Retrieve the state of the entity
          const match = entityState.match(regex); // Match regex on the entity state

          if (`${match[1]}` === "starting")
            return "Starting";
          else if (`${match[1]}` === "printing")
            return "Printing";
        ]]]
      color: green
      icon: mdi:printer-3d-nozzle
      color_type: card
      styles:
        card:
          - animation: mymovegreen 2s infinite
    - operator: template
      value: |
        [[[
          const COMMENT = "This section for Demo use only (For when printer is warming up/cooling down)";
          const regex = /3dwarm(\S+)/; 
          const entityState = states['input_text.dashboard_demo'].state; // Retrieve the state of the entity
          const match = entityState.match(regex); // Match regex on the entity state
          
          if  ((states['input_text.dashboard_demo'].state.indexOf("3dwarm")!= "-1")
          )  return "true"; 
        ]]]
      name: |
        [[[ 
          const regex = /3dwarm(\S+)/; 
          const entityState = states['input_text.dashboard_demo'].state; // Retrieve the state of the entity
          const match = entityState.match(regex); // Match regex on the entity state

          if (`${match[1]}` === "starting")
            return "Starting";
          else if (`${match[1]}` === "printing")
            return "Printing";
          else
            return `${match[1]}` + "℃";
        ]]]
      color: yellow
      icon: mdi:printer-3d-nozzle-heat-outline
      color_type: card
      styles:
        card:
          - animation: mymovegreen 2s infinite
    - value: Paused
      color: yellow
      icon: mdi:printer-3d-nozzle
      color_type: card
      styles:
        card:
          - animation: mymoveyellow 4s infinite
    - value: Printing
      color: green
      icon: mdi:printer-3d-nozzle
      color_type: card
      styles:
        card:
          - animation: mymovegreen 2s infinite
    - value: Starting
      color: green
      icon: mdi:printer-3d-nozzle
      color_type: card
      styles:
        card:
          - animation: mymovegreen 2s infinite
    - operator: template
      value: |
        [[[
          if ( (states['sensor.bambu_p1s_printer_nozzle_temperature'].state 
          >= 120) )
            return "true"; 
        ]]]
      color: red
      name: >
        [[[ return 
        states['sensor.bambu_p1s_printer_nozzle_temperature'].state + "℃"  ]]]
      icon: mdi:printer-3d-nozzle-heat-outline
    - operator: template
      value: |
        [[[
          if ( (states['sensor.bambu_p1s_printer_nozzle_temperature'].state 
          >= 60) )
            return "true"; 
        ]]]
      name: >
        [[[ return 
        states['sensor.bambu_p1s_printer_nozzle_temperature'].state + "℃"  ]]]
      enable_label: true
      color: yellow
      icon: mdi:printer-3d-nozzle-heat-outline
  custom_fields:
    progress:
      card:
        type: conditional
        conditions:
          - condition: state
            entity: sensor.bambu_p1s_printer_print_status
            state: running
        card:
          type: custom:bar-card
          entities:
            - entity: sensor.bambu_p1s_printer_print_progress
          positions:
            minmax: "off"
            name: "off"
            value: "off"
            indicator: "off"
            icon: "off"
          decimal: "0"
          columns: "1"
          entity_row: true
          direction: up
          height: 100%
          width: 100%
          color: "#1A510C"
          style: |
            bar-card-background {
              opacity: 0.4;
            }
  styles: null
  extra_styles: |
    @keyframes mymovegreen {
      60% {box-shadow: 0 0 15px green;}
    }
    @keyframes mymoveyellow {
      60% {box-shadow: 0 0 15px yellow;}
    }
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
      - position: relative
      - overflow: hidden
    custom_fields:
      progress:
        - position: absolute
        - top: 0
        - left: "-160px"
        - right: 0px
        - bottom: 0
        - z-index: 1
    name:
      - z-index: 2
    icon:
      - z-index: 2
    state:
      - z-index: 2
  grid_options:
    columns: 4
- type: custom:button-card
  entity: sensor.washing_machine_current_power
  name: Laundry
  icon: mdi:washing-machine-off
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/laundry
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  state:
    - operator: template
      value: |
        [[[
          if ( (states['sensor.washing_machine_current_power'].state 
          >= 4) )
            return "true"; 
        ]]]
      color: cyan
      icon: mdi:washing-machine
      color_type: card
      styles:
        card:
          - animation: washer 2s infinite
        icon:
          - animation: shake 2s infinite
    - operator: template
      value: |
        [[[
          if (states['sensor.clothes_dryer_current_power'].state 
          >= 4) 
            return "true"; 
        ]]]
      color: orangered
      icon: mdi:tumble-dryer
      color_type: card
      styles:
        card:
          - animation: dryer 2s infinite
        icon:
          - animation: shake 2s infinite
    - operator: template
      value: |
        [[[
          if ( (states['sensor.washing_machine_current_power'].state 
          >= 4) 
          &&
          (states['sensor.clothes_dryer_current_power'].state 
          >= 4) )
            return "true"; 
        ]]]
      icon: mdi:washing-machine
      color_type: card
      color: magenta
      styles:
        card:
          - animation: washeranddryer 2s infinite
        icon:
          - animation: shake 2s infinite
  extra_styles: |
    @keyframes dryer {
      60% {box-shadow: 0 0 15px orange;}
      }
    @keyframes washer {
      60% {box-shadow: 0 0 15px cyan;}
      }
    @keyframes washeranddryer {
      60% {box-shadow: 0 0 15px magenta;}
      }
    @keyframes shake {
    0%, 8% {
      transform: rotateZ(0);
    }
    15% {
      transform: rotateZ(-7deg);
    }
    20% {
      transform: rotateZ(6deg);
    }
    25% {
      transform: rotateZ(-6deg);
    }
    30% {
      transform: rotateZ(5deg);
    }
    35% {
      transform: rotateZ(-3deg);
    }
    40% {
      transform: rotateZ(4deg);
    }
    45% {
      transform: rotateZ(-2deg);
    }
    50%, 100% {
      transform: rotateZ(0);
    }
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  grid_options:
    columns: 4
- type: custom:config-template-card
  variables:
    DEVICE: states['input_select.music_broadcast_select']
  entities:
    - ${DEVICE.entity_id}
    - ${states[DEVICE.entity_id].state}
    - input_select.music_broadcast_select
  card:
    type: custom:button-card
    entity: ${states[DEVICE.entity_id].state}
    name: Music
    icon: mdi:speaker-multiple
    color: rgb(68 115 157)
    aspect_ratio: 1.50/1
    size: 100%
    tap_action:
      action: navigate
      navigation_path: /lovelace-mobile/music-assistant-beta
    hold_action:
      action: call-service
      service: media_player.media_play_pause
      target:
        entity_id: ${states[DEVICE.entity_id].state}
    show_icon: true
    show_state: false
    show_label: true
    show_name: true
    state:
      - value: paused
        color: grey
        icon: mdi:speaker-wireless
        color_type: card
      - operator: template
        value: |
          [[[
            if ( (entity.state == "playing") )
              return "true"; 
          ]]]
        name: |
          [[[
              var artist = entity.attributes.media_artist;
              var track = entity.attributes.media_title;
                return artist;
          ]]]
        label: |
          [[[
              var track = entity.attributes.media_title;
                return track;
          ]]]
        color: "#179443"
        icon: mdi:speaker-wireless
        color_type: card
        styles:
          card:
            - animation: mymovegreen 4s infinite
            - box-shadow: 0 0 4px green;
    extra_styles: |
      @keyframes mymovegreen {
        50% {box-shadow: 0 0 15px green;}
      }
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: Dog
  icon: mdi:dog
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/dog
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  state:
    - operator: template
      value: |
        [[[
          const COMMENT = "This section for Demo use only";
          if  ((states['input_text.dashboard_demo'].state.indexOf("dogwaterempty")!= "-1")
          )  return "true"; 
        ]]]
      color: cyan
      name: 💧 Empty 💧
      icon: mdi:dog
      color_type: card
      styles:
        card:
          - animation: mybluemove 2s infinite
    - operator: template
      value: |
        [[[
          if (states['binary_sensor.dog_water_bowl_water_leak'].state 
          == "off") 
            return "true"; 
        ]]]
      color: cyan
      name: 💧 Empty 💧
      icon: mdi:dog
      color_type: card
      styles:
        card:
          - animation: mybluemove 2s infinite
    - value: Starting
      color: green
      icon: mdi:printer-3d-nozzle
      color_type: card
      styles:
        card:
          - animation: mymovegreen 2s infinite
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  extra_styles: |
    @keyframes mybluemove {
      50% {box-shadow: 0 0 15px red;}
      }
    @keyframes lights {
      50% {box-shadow: 0 0 15px yellow;}
      }
    @keyframes washeranddryer {
      60% {box-shadow: 0 0 15px magenta;}
      }
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: Motion
  icon: mdi:motion-sensor
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/motion-stuff
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  state:
    - operator: template
      value: |
        [[[
          if ( (states['input_boolean.force_house_lights'].state 
          == "on") )
            return "true"; 
        ]]]
      color: orange
      icon: mdi:motion-sensor-off
      color_type: card
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  extra_styles: |
    @keyframes dryer {
      60% {box-shadow: 0 0 15px orange;}
      }
    @keyframes lights {
      50% {box-shadow: 0 0 15px yellow;}
      }
    @keyframes washeranddryer {
      60% {box-shadow: 0 0 15px magenta;}
      }
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: Smart Scale
  icon: mdi:scale-bathroom
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/weight
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: ESPresence
  icon: mdi:bluetooth
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/espresence
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  extra_styles: |
    @keyframes dryer {
      60% {box-shadow: 0 0 15px orange;}
      }
    @keyframes lights {
      50% {box-shadow: 0 0 15px yellow;}
      }
    @keyframes washeranddryer {
      60% {box-shadow: 0 0 15px magenta;}
      }
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: Energy
  icon: mdi:home-lightning-bolt
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-desktop/energy
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  extra_styles: |
    @keyframes dryer {
      60% {box-shadow: 0 0 15px orange;}
      }
    @keyframes lights {
      50% {box-shadow: 0 0 15px yellow;}
      }
    @keyframes washeranddryer {
      60% {box-shadow: 0 0 15px magenta;}
      }
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: HA Server
  icon: mdi:home-assistant
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-desktop/home-assistant
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  extra_styles: |
    @keyframes dryer {
      60% {box-shadow: 0 0 15px orange;}
      }
    @keyframes lights {
      50% {box-shadow: 0 0 15px yellow;}
      }
    @keyframes washeranddryer {
      60% {box-shadow: 0 0 15px magenta;}
      }
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: Mobile Devices
  icon: mdi:devices
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/mobile-devices
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  extra_styles: |
    @keyframes dryer {
      60% {box-shadow: 0 0 15px orange;}
      }
    @keyframes lights {
      50% {box-shadow: 0 0 15px yellow;}
      }
    @keyframes washeranddryer {
      60% {box-shadow: 0 0 15px magenta;}
      }
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: Bathrooms
  icon: mdi:bathtub
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/bathrooms
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  extra_styles: |
    @keyframes dryer {
      60% {box-shadow: 0 0 15px orange;}
      }
    @keyframes lights {
      50% {box-shadow: 0 0 15px yellow;}
      }
    @keyframes washeranddryer {
      60% {box-shadow: 0 0 15px magenta;}
      }
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: Bills
  icon: mdi:cash-clock
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/bills
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  extra_styles: |
    @keyframes dryer {
      60% {box-shadow: 0 0 15px orange;}
      }
    @keyframes lights {
      50% {box-shadow: 0 0 15px yellow;}
      }
    @keyframes washeranddryer {
      60% {box-shadow: 0 0 15px magenta;}
      }
  grid_options:
    columns: 4
- type: custom:button-card
  entity: null
  name: Kitchen
  icon: phu:kitchen-alt
  color: rgb(68 115 157)
  aspect_ratio: 1.50/1
  size: 100%
  tap_action:
    action: navigate
    navigation_path: /lovelace-mobile/kitchen
  hold_action:
    action: none
  show_icon: true
  show_state: false
  show_name: true
  styles:
    card:
      - "--mdc-ripple-color": grey
      - "--mdc-ripple-press-opacity": 0.5
  extra_styles: |
    @keyframes dryer {
      60% {box-shadow: 0 0 15px orange;}
      }
    @keyframes lights {
      50% {box-shadow: 0 0 15px yellow;}
      }
    @keyframes washeranddryer {
      60% {box-shadow: 0 0 15px magenta;}
      }
  grid_options:
    columns: 4